How website work 

**************************************************************************************************************************

Task 1: How websites work 

[*] Read this task and understand how about websites work 

    [+] When you visit a website, your browser (like Safari or Google Chrome) makes a request to a web server asking for information about the page you're visiting.

    [+] It will respond with data that your browser uses to show you the page; a web server is just a dedicated computer somewhere else in the world that handles your requests.

    [+] There are two major components that make up a website:

        [1] Front-End

        [2] Back-End

[Question 1]: What term best describes the component of a web application rendered by your browser?

    [!] Answer: Front-End

**************************************************************************************************************************

Task 2: HTML

[*] Websites are primarily created using:

    [+] HTML, to build websites and define their structure
    [+] CSS, to make websites look pretty by adding styling options
    [+] JavaScript, implement complex features on pages using interactivity

[*] HyperText Markup Language (HTML) is the language websites are written in.

[Question 1]: No Answer needed 

[Question 2]: One of the images on the cat website is broken - fix it, and the image will reveal the hidden text answer!

    [+] We see, img/cat-2. This image is missing the jpg format. 

    [!] Answer: HTMLHERO 

[Question 3]: Add a dog image to the page by adding another img tag (<img>) on line 11. The dog image location is img/dog-1.png. What is the text in the dog image?

    [+] Do same question 2. 

    [+] Change "img/cat-2.jpn" to "img/dog-1.png" and click to render button 

    [!] Answer: DOGHTML 

**************************************************************************************************************************

Task 3: Javascript 

[*] JavaScript (JS) is one of the most popular coding languages in the world and allows pages to become interactive.

[*] HTML is used to create the website structure and content, while JavaScript is used to control the functionality of web pages - without JavaScript, a page would not have interactive elements and would always be static. 

[Question 1]: Click the "View Site" button on this task. On the right-hand side, add JavaScript that changes the demo element's content to "Hack the Planet"

    [+] document.getElementById("demo").innerHTML = "Hack the Planet";

    [!] Answer: JSISFUN

[Question 2]: Add the button HTML from this task that changes the element's text to "Button Clicked" on the editor on the right, update the code by clicking the "Render HTML+JS Code" button and then click the button.

    [!] AnswerL No answer needed 

**************************************************************************************************************************

Task 4: Sensitive Data Exposure

[*] Sensitive Data Exposure occurs when a website doesn't properly protect (or remove) sensitive clear-text information to the end-user; usually found in a site's frontend source code.

[*] We now know that websites are built using many HTML elements (tags), all of which we can see simply by "viewing the page source". 

[*] Deploy the View Site 

    [+] We see the frame source 

    [+] We can see the account 

        [+] admin
        [+] testpasswd 

    [!] Answer: testpasswd

**************************************************************************************************************************

Task 5: HTML Injection

[*] HTML Injection is a vulnerability that occurs when unfiltered user input is displayed on the page.

[*] If a website fails to sanitise user input (filter any "malicious" text that a user inputs into a website), and that input is used on the page, an attacker can inject HTML code into a vulnerable website.

[Question 1]: View the website on this task and inject HTML so that a malicious link to http://hacker.com is shown.

    [+] We type this command to submit:

        [+] <a href="http://hacker.com">YourName</a>

    [!] Answer: HTML_INJ3CTI0N



    